{"trial_id": "0", "hyperparameters": {"space": [{"class_name": "Int", "config": {"name": "num_dense_layers", "default": null, "conditions": [], "min_value": 1, "max_value": 8, "step": 1, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "num_units0", "default": null, "conditions": [], "min_value": 8, "max_value": 256, "step": 8, "sampling": "linear"}}, {"class_name": "Choice", "config": {"name": "activation0", "default": "relu", "conditions": [], "values": ["relu", "selu", "sigmoid", "tanh"], "ordered": false}}, {"class_name": "Choice", "config": {"name": "optimizer0", "default": "adam", "conditions": [], "values": ["adam", "adagrad", "adadelta", "rmspropsgd"], "ordered": false}}, {"class_name": "Int", "config": {"name": "num_units1", "default": null, "conditions": [], "min_value": 8, "max_value": 256, "step": 8, "sampling": "linear"}}, {"class_name": "Choice", "config": {"name": "activation1", "default": "relu", "conditions": [], "values": ["relu", "selu", "sigmoid", "tanh"], "ordered": false}}, {"class_name": "Choice", "config": {"name": "optimizer1", "default": "adam", "conditions": [], "values": ["adam", "adagrad", "adadelta", "rmspropsgd"], "ordered": false}}], "values": {"num_dense_layers": 2, "num_units0": 224, "activation0": "selu", "optimizer0": "rmspropsgd", "num_units1": 8, "activation1": "relu", "optimizer1": "adam"}}, "metrics": {"metrics": {}}, "score": null, "best_step": 0, "status": "FAILED", "message": "Traceback (most recent call last):\n  File \"C:\\Users\\rsk13\\anaconda3\\envs\\tf\\lib\\site-packages\\keras_tuner\\engine\\base_tuner.py\", line 270, in _try_run_and_update_trial\n    self._run_and_update_trial(trial, *fit_args, **fit_kwargs)\n  File \"C:\\Users\\rsk13\\anaconda3\\envs\\tf\\lib\\site-packages\\keras_tuner\\engine\\base_tuner.py\", line 235, in _run_and_update_trial\n    results = self.run_trial(trial, *fit_args, **fit_kwargs)\n  File \"C:\\Users\\rsk13\\anaconda3\\envs\\tf\\lib\\site-packages\\keras_tuner\\engine\\tuner.py\", line 287, in run_trial\n    obj_value = self._build_and_fit_model(trial, *args, **copied_kwargs)\n  File \"C:\\Users\\rsk13\\anaconda3\\envs\\tf\\lib\\site-packages\\keras_tuner\\engine\\tuner.py\", line 214, in _build_and_fit_model\n    results = self.hypermodel.fit(hp, model, *args, **kwargs)\n  File \"C:\\Users\\rsk13\\anaconda3\\envs\\tf\\lib\\site-packages\\keras_tuner\\engine\\hypermodel.py\", line 144, in fit\n    return model.fit(*args, **kwargs)\n  File \"C:\\Users\\rsk13\\anaconda3\\envs\\tf\\lib\\site-packages\\keras\\utils\\traceback_utils.py\", line 70, in error_handler\n    raise e.with_traceback(filtered_tb) from None\n  File \"C:\\Users\\rsk13\\AppData\\Local\\Temp\\__autograph_generated_fileu_ofb1w3.py\", line 15, in tf__train_function\n    retval_ = ag__.converted_call(ag__.ld(step_function), (ag__.ld(self), ag__.ld(iterator)), None, fscope)\nValueError: in user code:\n\n    File \"C:\\Users\\rsk13\\anaconda3\\envs\\tf\\lib\\site-packages\\keras\\engine\\training.py\", line 1160, in train_function  *\n        return step_function(self, iterator)\n    File \"C:\\Users\\rsk13\\anaconda3\\envs\\tf\\lib\\site-packages\\keras\\engine\\training.py\", line 1146, in step_function  **\n        outputs = model.distribute_strategy.run(run_step, args=(data,))\n    File \"C:\\Users\\rsk13\\anaconda3\\envs\\tf\\lib\\site-packages\\keras\\engine\\training.py\", line 1135, in run_step  **\n        outputs = model.train_step(data)\n    File \"C:\\Users\\rsk13\\anaconda3\\envs\\tf\\lib\\site-packages\\keras\\engine\\training.py\", line 993, in train_step\n        y_pred = self(x, training=True)\n    File \"C:\\Users\\rsk13\\anaconda3\\envs\\tf\\lib\\site-packages\\keras\\utils\\traceback_utils.py\", line 70, in error_handler\n        raise e.with_traceback(filtered_tb) from None\n    File \"C:\\Users\\rsk13\\anaconda3\\envs\\tf\\lib\\site-packages\\keras\\engine\\input_spec.py\", line 277, in assert_input_compatibility\n        raise ValueError(\n\n    ValueError: Exception encountered when calling layer \"sequential\" \"                 f\"(type Sequential).\n    \n    Input 0 of layer \"conv2d\" is incompatible with the layer: expected axis -1 of input shape to have value 1, but received input with shape (None, 32, 32, 3)\n    \n    Call arguments received by layer \"sequential\" \"                 f\"(type Sequential):\n      \u2022 inputs=tf.Tensor(shape=(None, 32, 32, 3), dtype=float32)\n      \u2022 training=True\n      \u2022 mask=None\n\n"}